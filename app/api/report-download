// app/api/report-download/route.ts
import { NextRequest, NextResponse } from 'next/server';

// Map free report IDs to files (2024)
// You can replace these with signed URLs.
const FREE_FILE_MAP: Record<string, string> = {
  'sir-2024': '/downloads/sir-2024.pdf',
  'sr-2024-1': '/downloads/sr-2024-1.pdf',
  'sr-2024-2': '/downloads/sr-2024-2.pdf',
  'sr-2024-3': '/downloads/sr-2024-3.pdf',
  'sr-2024-4': '/downloads/sr-2024-4.pdf',
  'sr-2024-5': '/downloads/sr-2024-5.pdf',
  'sr-2024-6': '/downloads/sr-2024-6.pdf',
};

export async function POST(req: NextRequest) {
  const ct = req.headers.get('content-type') || '';
  if (!ct.includes('multipart/form-data')) {
    return NextResponse.json({ ok: false }, { status: 400 });
  }
  const form = await req.formData();

  // Honeypot
  if (form.get('website')) return NextResponse.json({ ok: true });

  const id = String(form.get('reportId') || '');
  const url = FREE_FILE_MAP[id];
  if (!url) {
    return NextResponse.json({ ok: false, error: 'Unknown report' }, { status: 404 });
  }

  // TODO: forward to CRM / email service
  // const payload = { id, name: form.get('name'), email: form.get('email'), company: form.get('company'), ts: new Date().toISOString() };
  // await fetch(process.env.ZAPIER_WEBHOOK_URL!, { method: 'POST', body: JSON.stringify(payload) });

  return NextResponse.json({ ok: true, url });
}
